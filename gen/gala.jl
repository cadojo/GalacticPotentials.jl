#
# This script bootstraps GalacticPotentials.jl through the "gala" Python package!
# An attempt is made to convert all potentials in the package to SymPy expressions,
# and then to LaTeX expressions. The results are printed to an ImmutableDict within 
# GalacticPotentials.jl. Thank you Gala!
#

ENV["PYTHON"] = "/opt/homebrew/bin/python3"

import Pkg
Pkg.activate(@__DIR__)
Pkg.instantiate()
Pkg.build("PyCall")

using Dates
using PyCall, SymPy, LaTeXStrings

gala = pyimport("gala.potential")

expressions = Dict{String,LaTeXString}()

latex!(collection::AbstractDict, name::AbstractString) =
    try
        collection[name] = sympy.latex(getproperty(gala.potential, name).to_sympy())
    catch
        @warn "Unable to get expression for $name."
    end

for potential in gala.potential.__dir__()
    if occursin("Potential", potential)
        latex!(expressions, potential)
    end
end

open(joinpath(@__DIR__, "..", "src", "gen", "expressions.jl"), "w") do file
    write(
        file,
        """
        #
        # This is an autogenerated file! It was created on $(today()).
        # 

        const expressions = Base.ImmutableDict(
        """
    )

    for potential in sort(collect(keys(expressions)))
        write(file, """\t"$potential" => L"$(expressions[potential])",\n""")
    end

    write(file, ")\n")

end